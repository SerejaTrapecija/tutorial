{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/News/News.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './News.css';\n\nconst News = props => {\n  _s();\n\n  const [changeModTitle, setChangeModTitle] = useState(false);\n  const [changeModContent, setChangeModContent] = useState(false);\n  const [title, setTitle] = useState(props.name);\n  const [content, setContent] = useState(props.content);\n  console.log(props, props.name);\n  useEffect(() => {\n    setTitle(props.name);\n  }, [props.name]);\n  useEffect(() => {\n    setContent(props.content);\n  }, [props.content]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerTabs\",\n    children: [!changeModTitle && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"news-title\",\n      onDoubleClick: () => {\n        setChangeModTitle(true);\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 36\n    }, this), changeModTitle && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      defaultValue: title,\n      onChange: props.changeTitle,\n      autoFocus: true,\n      onBlur: () => {\n        setChangeModTitle(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 35\n    }, this), !changeModContent && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"news-preview\",\n      onDoubleClick: () => {\n        setChangeModContent(true);\n      },\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 38\n    }, this), changeModContent && /*#__PURE__*/_jsxDEV(\"textarea\", {\n      defaultValue: content,\n      onChange: props.changeContent,\n      autoFocus: true,\n      onBlur: () => {\n        setChangeModContent(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"news-button\",\n      onClick: props.onDeleteNews,\n      children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(News, \"VXXpTu/pdICX0XAch5It8WFePhk=\");\n\n_c = News;\nexport default News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/News/News.tsx"],"names":["React","useState","useEffect","News","props","changeModTitle","setChangeModTitle","changeModContent","setChangeModContent","title","setTitle","name","content","setContent","console","log","changeTitle","changeContent","onDeleteNews"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0D,OAA1D;AACA,OAAO,YAAP;;AAUA,MAAMC,IAAmB,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACG,KAAK,CAACO,IAAP,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAACG,KAAK,CAACQ,OAAP,CAAtC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ,EAAmBA,KAAK,CAACO,IAAzB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAACN,KAAK,CAACO,IAAP,CAAR;AACH,GAFQ,EAEN,CAACP,KAAK,CAACO,IAAP,CAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,UAAU,CAACT,KAAK,CAACQ,OAAP,CAAV;AACH,GAFQ,EAEN,CAACR,KAAK,CAACQ,OAAP,CAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,eAEQ,CAACP,cAAD,iBAAmB;AAAI,MAAA,SAAS,EAAC,YAAd;AAA2B,MAAA,aAAa,EAAE,MAAM;AAACC,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AAAwB,OAAzE;AAAA,gBAA4EG;AAA5E;AAAA;AAAA;AAAA;AAAA,YAF3B,EAKQJ,cAAc,iBAAI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,YAAY,EAAEI,KAAjC;AAAwC,MAAA,QAAQ,EAAEL,KAAK,CAACY,WAAxD;AAAqE,MAAA,SAAS,MAA9E;AAA+E,MAAA,MAAM,EAAE,MAAM;AAACV,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AAAyB;AAAvH;AAAA;AAAA;AAAA;AAAA,YAL1B,EAQQ,CAACC,gBAAD,iBAAqB;AAAG,MAAA,SAAS,EAAC,cAAb;AAA4B,MAAA,aAAa,EAAE,MAAM;AAACC,QAAAA,mBAAmB,CAAC,IAAD,CAAnB;AAA0B,OAA5E;AAAA,gBAA+EI;AAA/E;AAAA;AAAA;AAAA;AAAA,YAR7B,EAWQL,gBAAgB,iBAAI;AAAU,MAAA,YAAY,EAAEK,OAAxB;AAAiC,MAAA,QAAQ,EAAER,KAAK,CAACa,aAAjD;AAAgE,MAAA,SAAS,MAAzE;AAA0E,MAAA,MAAM,EAAE,MAAM;AAACT,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AAA2B;AAApH;AAAA;AAAA;AAAA;AAAA,YAX5B,eAaI;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,OAAO,EAAEJ,KAAK,CAACc,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAhCD;;GAAMf,I;;KAAAA,I;AAkCN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect, FC, ChangeEvent} from 'react';\nimport './News.css';\n\ntype typeProps = {\n    name?: string,\n    content?: string,\n    changeTitle?: ((event: ChangeEvent<HTMLInputElement>) => void)|undefined,\n    changeContent?: ((event: ChangeEvent<HTMLTextAreaElement>) => void)|undefined,\n    onDeleteNews?: ((event: ChangeEvent<HTMLButtonElement>) => void)|undefined,\n}\n\nconst News: FC<typeProps> = (props) => {\n    const [changeModTitle, setChangeModTitle] = useState(false);\n    const [changeModContent, setChangeModContent] = useState(false);\n    const [title, setTitle] = useState(props.name);\n    const [content, setContent] = useState(props.content);\n    console.log(props, props.name)\n\n    useEffect(() => {\n        setTitle(props.name)\n    }, [props.name]);\n\n    useEffect(() => {\n        setContent(props.content)\n    }, [props.content]);\n\n    return (\n        <div className=\"containerTabs\">\n            {\n                !changeModTitle && <h3 className=\"news-title\" onDoubleClick={() => {setChangeModTitle(true)}}>{title}</h3>\n            }\n            {\n                changeModTitle && <input type=\"text\" defaultValue={title} onChange={props.changeTitle} autoFocus onBlur={() => {setChangeModTitle(false)}}/>\n            }\n            {\n                !changeModContent && <p className=\"news-preview\" onDoubleClick={() => {setChangeModContent(true)}}>{content}</p>\n            }\n            {\n                changeModContent && <textarea defaultValue={content} onChange={props.changeContent} autoFocus onBlur={() => {setChangeModContent(false)}}/>\n            }\n            <button className=\"news-button\" onClick={props.onDeleteNews}>Удалить</button>\n        </div>\n    )\n}\n\nexport default News\n"]},"metadata":{},"sourceType":"module"}