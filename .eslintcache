[{"/Users/sergeyleontiev/Desktop/SENLA/iteration/src/components/form/form.js":"1","/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/Form/Form.js":"2","/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/ElevenIteration/ElevenIterationFunc.js":"3","/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/Header/Header.tsx":"4","/Users/sergeyleontiev/Desktop/SENLA/iteration/src/App.tsx":"5","/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/ElevenIteration/ElevenIterationClass.js":"6","/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/ErrorBoundary/ErrorBoundary.tsx":"7","/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/ExampleList/ExampleList.tsx":"8","/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/Footer/Footer.tsx":"9","/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/TenIteration/TenIteration.tsx":"10","/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/Main/Main.tsx":"11","/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/Post/Post.tsx":"12","/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/News/News.tsx":"13"},{"size":4181,"mtime":1608323296067,"results":"14","hashOfConfig":"15"},{"size":4203,"mtime":1610040896558,"results":"16","hashOfConfig":"15"},{"size":1382,"mtime":1609534956291,"results":"17","hashOfConfig":"15"},{"size":1491,"mtime":1610027415738,"results":"18","hashOfConfig":"15"},{"size":3704,"mtime":1610034560394,"results":"19","hashOfConfig":"15"},{"size":1627,"mtime":1610034534196,"results":"20","hashOfConfig":"15"},{"size":446,"mtime":1610039493110,"results":"21","hashOfConfig":"15"},{"size":1802,"mtime":1610039570012,"results":"22","hashOfConfig":"15"},{"size":767,"mtime":1610043506613,"results":"23","hashOfConfig":"15"},{"size":1703,"mtime":1610041625764,"results":"24","hashOfConfig":"15"},{"size":142,"mtime":1610041782048,"results":"25","hashOfConfig":"15"},{"size":211,"mtime":1610041973431,"results":"26","hashOfConfig":"15"},{"size":1390,"mtime":1610041720559,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1vhqwb4",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sergeyleontiev/Desktop/SENLA/iteration/src/components/form/form.js",["59"],"/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/Form/Form.js",["60"],"import React from 'react';\nimport './Form.css';\n\nexport default () => {\n    const showPopup = () => {\n        const popup = document.querySelector('.popup');\n        popup.style.display = 'block';\n    };\n    const closePopup = (e) => {\n        const popup = document.querySelector('.popup');\n        e.preventDefault();\n        popup.style.display = 'none';\n    };\n    const getRepo = (login) =>{\n        return fetch(`https://api.github.com/users/${login}/repos`)\n            .then(response => response.json() )\n    };\n    const drawGitList = (gitProject) => {\n        const listItem = document.createElement('li');\n        const gitList = document.createElement('ul');\n        listItem.textContent = gitProject;\n        gitList.appendChild(listItem);\n        return gitList;\n    };\n    const getRepoGit = () => {\n        const gitRepoLogin = document.querySelector('.gitrepo').value;\n        const form = document.querySelector('.container__form');\n        getRepo(gitRepoLogin)\n            .then(projects => projects.forEach(item => form.appendChild(drawGitList(item.name))))\n    };\n    return (\n        <form className=\"container__form containerTabs\">\n            <fieldset className=\"container__form-fieldset\">\n                <legend><h2 className=\"container__form-title\">Персональная информация</h2></legend>\n                <input className='container__form-input' type=\"text\" name=\"\" id=\"fname\" placeholder=\"Введите имя\"/>\n                <span className=\"errorText\">Введите своё имя в поле</span>\n                <input className='container__form-input' type=\"text\" name=\"\" id=\"fsurname\"\n                       placeholder=\"Введите фамилию\"/>\n                <textarea\n                    className='container__form-textArea'\n                    placeholder='Расскажите о себе'\n                    name=\"txtarea\"\n                    id=\"\">\n                </textarea>\n                <span className=\"change-message\">Введите дату рождения:</span>\n                <input type=\"date\" className=\"container__form-changeDate\" name=\"calendar\" id=\"date_birth\"/>\n                <span className=\"change-message\">Выберите пол:</span>\n                <div className=\"container__form-changeGender\">\n                    <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\"/>\n                    <label htmlFor=\"male\">Мужской</label>\n                    <br/>\n                    <input type=\"radio\" id=\"female\" name=\"gender\" value=\"female\"/>\n                    <label htmlFor=\"female\">Женский</label>\n                </div>\n                <span className=\"change-message\">Выберите навыки:</span>\n                <select className=\"container__form-skills\" name=\"\" id=\"skills\" multiple>\n                    <option value=\"HTML\">HTML</option>\n                    <option value=\"CSS\">CSS</option>\n                    <option value=\"JavaScript\">JavaScript</option>\n                </select>\n                <span className=\"change-message\">Загрузите резюме:</span>\n                <input className=\"container__form-loadResume\" type=\"file\" id=\"myfile\" name=\"myfile\"/>\n                <label htmlFor=\"agree\">Согласение на обработку персональных данных:</label>\n                <input type=\"checkbox\" name=\"\" id=\"agree\"/>\n                <input type=\"button\" onClick={showPopup} className='container__form-button' value=\"Отправить\"/>\n                <div className=\"popup\">\n                    <div className=\"popup-content\">\n                        Данные формы отправлены на сервер\n                        <button onClick={closePopup} className=\"clsPopup container__form-button\">Закрыть</button>\n                    </div>\n                </div>\n                <input type=\"text\" className=\"gitrepo container__form-input\" placeholder=\"Введите логин GIT\"/>\n                <input onClick={getRepoGit} type=\"button\" className=\"getrepo container__form-button\" value=\"Получить проекты с GIT\"/>\n            </fieldset>\n        </form>\n    );\n}\n",["61","62"],"/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/ElevenIteration/ElevenIterationFunc.js",["63"],"import React, { useState, useEffect, useRef } from 'react';\nimport classes from \"./ElevenIterationClass.module.css\";\n\nfunction setDefaultTimer () {\n    const localTimer = localStorage.getItem('timer');\n    return localTimer ? +localTimer : 0;\n}\n\nexport default () => {\n    const [timer, setTimer] = useState(setDefaultTimer());\n    const [countTimer, setCountTimer] = useState(true);\n    const timerIdRef = useRef(null);\n\n    const startTimer = () => {\n        setCountTimer(false)\n    }\n\n    const stopTimer = () => {\n        setCountTimer(true);\n    }\n\n    const resetTimer = () => {\n        setTimer(0)\n        setCountTimer(true);\n    }\n\n    useEffect(() => {\n        localStorage.setItem('timer', timer)\n    }, [timer])\n\n    useEffect(() => {\n        if(!countTimer) timerIdRef.current = setInterval(() => {\n            setTimer(prevTimer => prevTimer + 1)\n        }, 100)\n        return () => {\n            clearInterval(timerIdRef.current);\n        }\n    }, [countTimer])\n\n    return (\n        <div>\n            <div className={classes.ElevenIteration}>\n                <p>{ timer }</p>\n            </div>\n            <div className={classes.Buttons}>\n                { countTimer ?  <button onClick={startTimer}>Start</button> : <button onClick={stopTimer}>Stop</button>}\n                <button onClick={resetTimer}>Reset</button>\n            </div>\n        </div>\n    )\n}\n","/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/Header/Header.tsx",["64"],"import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport './Header.css';\n\nexport default() => (\n        <div className='headerContainer'>\n            <ul className='headerContainer__list'>\n                <li className='headerContainer__item'><NavLink className='headerContainer__link' to='/' exact activeClassName={'active-item'}>Main</NavLink></li>\n                <li className='headerContainer__item'><NavLink className='headerContainer__link' to='/news' activeClassName={'active-item'}>News</NavLink></li>\n                <li className='headerContainer__item'><NavLink className='headerContainer__link' to='/list' activeClassName={'active-item'}>Example List</NavLink></li>\n                <li className='headerContainer__item'><NavLink className='headerContainer__link' to='/teniteration' activeClassName={'active-item'}>10 итерация</NavLink></li>\n                <li className='headerContainer__item'><NavLink className='headerContainer__link' to='/eleveniterationclass' activeClassName={'active-item'}>11 итерация(класс)</NavLink></li>\n                <li className='headerContainer__item'><NavLink className='headerContainer__link' to='/eleveniterationfunc' activeClassName={'active-item'}>11 итерация(функция)</NavLink></li>\n                <li className='headerContainer__item'><NavLink className='headerContainer__link' to='/about' activeClassName={'active-item'}>About</NavLink></li>\n            </ul>\n        </div>\n    )\n","/Users/sergeyleontiev/Desktop/SENLA/iteration/src/App.tsx",[],"/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/ElevenIteration/ElevenIterationClass.js",[],"/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/ErrorBoundary/ErrorBoundary.tsx",[],"/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/ExampleList/ExampleList.tsx",["65"],"/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/Footer/Footer.tsx",["66","67","68"],"import React from 'react';\nimport './Footer.css';\nimport vkLogo from './image/vk.png';\nimport youtubeLogo from './image/youtube.png';\nimport fbLogo from './image/fb.png';\n\nconst Footer: React.FC = () => {\n    return (\n        <React.Fragment>\n            <div className=\"footerContainer\">\n                <div className=\"socialLinks\">\n                    <a href=\"#\"><img src={vkLogo} alt=\"\"/></a>\n                    <a href=\"#\"><img src={youtubeLogo} alt=\"\"/></a>\n                    <a href=\"#\"><img src={fbLogo} alt=\"\"/></a>\n                </div>\n            </div>\n            <div className = \"additional-info\">\n                <a href = \"tel:+1234567\"> 8 - (888) - 888 - 88 - 88 </a>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default Footer","/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/TenIteration/TenIteration.tsx",["69"],"/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/Main/Main.tsx",["70"],"/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/Post/Post.tsx",[],"/Users/sergeyleontiev/Desktop/SENLA/iteration/src/Components/News/News.tsx",["71"],{"ruleId":"72","severity":1,"message":"73","line":2,"column":1,"nodeType":"74","endLine":76,"endColumn":2},{"ruleId":"72","severity":1,"message":"73","line":4,"column":1,"nodeType":"74","endLine":77,"endColumn":2},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"72","severity":1,"message":"73","line":9,"column":1,"nodeType":"74","endLine":51,"endColumn":2},{"ruleId":"72","severity":1,"message":"73","line":5,"column":1,"nodeType":"74","endLine":17,"endColumn":6},{"ruleId":"72","severity":1,"message":"73","line":4,"column":1,"nodeType":"74","endLine":63,"endColumn":2},{"ruleId":"79","severity":1,"message":"80","line":12,"column":21,"nodeType":"81","endLine":12,"endColumn":33},{"ruleId":"79","severity":1,"message":"80","line":13,"column":21,"nodeType":"81","endLine":13,"endColumn":33},{"ruleId":"79","severity":1,"message":"80","line":14,"column":21,"nodeType":"81","endLine":14,"endColumn":33},{"ruleId":"72","severity":1,"message":"73","line":28,"column":1,"nodeType":"74","endLine":62,"endColumn":2},{"ruleId":"72","severity":1,"message":"73","line":5,"column":1,"nodeType":"74","endLine":9,"endColumn":2},{"ruleId":"72","severity":1,"message":"73","line":3,"column":1,"nodeType":"74","endLine":35,"endColumn":2},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["82"],"no-negated-in-lhs",["83"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]